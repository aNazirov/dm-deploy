import {useRouter} from "next/router";
import React, {useEffect, useState} from "react";
import {useAppDispatch} from "../../core/hooks";
import {deleteOrganizationThunk, getOrganizationsByIdThunk} from "../../core/store/organization/organization.thunks";
import {OrganizationModel} from "../../core/models";
import Head from "next/head";
import {AppButton, AppCard} from "../../components/Main";
import styles from "../../styles/reports.module.scss";
import ChevronIcon from "../../assets/images/icons/filled/arrows/chevron-left.svg";
import TrashIcon from "../../assets/images/icons/filled/trash.svg";
import cn from "classnames";
import EditIcon from "../../assets/images/icons/filled/pencil.svg";

const OrganizationInfoPage = () => {
	const router = useRouter();

	const organizationId = router.query["organizationId"] as string;

	const dispatch = useAppDispatch();

	const [organization, setOrganization] = useState<OrganizationModel>();

	useEffect(() => {
		if (organizationId) {
			const promise = dispatch(getOrganizationsByIdThunk(+organizationId));

			promise.then((res) => {
				if (res.payload) {
					setOrganization(res.payload as OrganizationModel);
				}
			});

			return () => {
				promise.abort();
			};
		}
	}, [organizationId]);

	if (!organization) return null;

	const onDelete = async () => {
		const action = await dispatch(deleteOrganizationThunk(organization.id));
		if (action.payload) {
			void router.push("/organizations");
		}
	};

	const onEditing = () => {
		void router.push(`update/${organizationId}`);
	};

	return (
		<>
			<Head>
				<title>{organization.title.ru}</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<div className="flex-col gap-1.25">
				<h1 className="h1">{organization.title.ru}</h1>

				<AppCard>
					<AppCard.Header className="text-start">Данные клиники и реквизиты</AppCard.Header>
					<AppCard.Body>
						<div className={cn("gap-1.25", styles.labelDeskGridDivided2)}>
							<div>
								<p className="text-main-bold mb-0.5 d-inline-block">Название:</p>
								<p>{organization.title.ru}</p>
							</div>

							<div>
								<p className="text-main-bold mb-0.5 d-inline-block">МФО:</p>
								<p>{organization.mfi}</p>
							</div>

							<div>
								<p className="text-main-bold mb-0.5 d-inline-block">Адрес банка:</p>
								<p>{organization.address}</p>
							</div>
							<div>
								<p className="text-main-bold mb-0.5 d-inline-block">ИНН:</p>
								<p>{organization.itn}</p>
							</div>
							<div>
								<p className="text-main-bold mb-0.5 d-inline-block">ОКЭД:</p>
								<p>{organization.ccea}</p>
							</div>
							<div>
								<p className="text-main-bold mb-0.5 d-inline-block">ОКПО:</p>
								<p>{organization.rcbo}</p>
							</div>
						</div>
					</AppCard.Body>
				</AppCard>
			</div>

			<div className="flex-justify-between mt-auto pt-2.5">
				<AppButton useAs="link" href="/organizations" size="lg" variant="dark" withIcon>
					<ChevronIcon width="24px" height="24px" />
					Назад
				</AppButton>

				<div className="d-flex gap-1.25">
					<AppButton onClick={onEditing} size="lg" variant="print" withIcon>
						<EditIcon width="24px" height="24px" />
						<span>Редактировать</span>
					</AppButton>
					<AppButton onClick={onDelete} size="lg" variant="danger" withIcon>
						<TrashIcon width="24px" height="24px" />
						<span>Удалить</span>
					</AppButton>
				</div>
			</div>
		</>
	);
};

export default OrganizationInfoPage;
