import {useRouter} from "next/router";
import React, {useEffect, useState} from "react";
import {useAppDispatch} from "../../core/hooks";
import {deleteUserThunk, getUsersByIdThunk} from "../../core/store/user/user.thunks";
import {UserModel} from "../../core/models";
import Head from "next/head";
import {AppButton, AppCard} from "../../components/Main";
import styles from "../../styles/reports.module.scss";
import ChevronIcon from "../../assets/images/icons/filled/arrows/chevron-left.svg";
import TrashIcon from "../../assets/images/icons/filled/trash.svg";
import Moment from "react-moment";
import cn from "classnames";

const UserInfoPage = () => {
	const router = useRouter();

	const reportId = router.query["userId"] as string;

	const dispatch = useAppDispatch();
	const [user, setUser] = useState<UserModel>();

	useEffect(() => {
		if (reportId) {
			const promise = dispatch(getUsersByIdThunk(+reportId));

			promise.then((res) => {
				if (res.payload) {
					setUser(res.payload as UserModel);
				}
			});

			return () => {
				promise.abort();
			};
		}
	}, [reportId]);

	if (!user) return null;

	const onDelete = async () => {
		const action = await dispatch(deleteUserThunk(user.id));
		if (action.payload) {
			void router.push("/users");
		}
	};

	return (
		<>
			<Head>
				<title>{user.displayName.ru}</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<div className="flex-col gap-1.25">
				<h1 className="h1">{user.displayName.ru}</h1>

				<AppCard>
					<AppCard.Header className="text-start">Данные</AppCard.Header>
					<AppCard.Body>
						<div className={cn("gap-1.25", styles.labelDeskGridDivided2)}>
							<div>
								<p className="text-main-bold mb-0.5 d-inline-block">Имя:</p>
								<p>{user.firstName ?? user.displayName.ru.split(" ")?.[1] ?? ""}</p>
							</div>

							<div>
								<p className="text-main-bold mb-0.5 d-inline-block">Фамилия:</p>
								<p>{user.lastName ?? user.displayName.ru.split(" ")?.[0] ?? ""}</p>
							</div>

							<div>
								<p className="text-main-bold mb-0.5 d-inline-block">Отчество:</p>
								<p>{user.secondName ?? user.displayName.ru.split(" ")?.[2] ?? ""}</p>
							</div>
							<div>
								<p className="text-main-bold mb-0.5 d-inline-block">Номер телефона:</p>
								<p>{user.contact.phone}</p>
							</div>
							<div>
								<p className="text-main-bold mb-0.5 d-inline-block">Должность:</p>
								<p>{user.position.title.ru}</p>
							</div>
							<div>
								<p className="text-main-bold mb-0.5 d-inline-block">Специальность:</p>
								<p>{user.speciality.title.ru}</p>
							</div>
							<div>
								<p className="text-main-bold mb-0.5 d-inline-block">Дата рождения:</p>
								<p>
									<Moment format="DD.MM.YYYY">{user.birthDate}</Moment>
								</p>
							</div>
							<div>
								<p className="text-main-bold mb-0.5 d-inline-block">Название организации:</p>
								<p>{user.organization.title.ru}</p>
							</div>
						</div>
					</AppCard.Body>
				</AppCard>
			</div>

			<div className="flex-justify-between mt-auto pt-2.5">
				<AppButton useAs="link" href="/users" size="lg" variant="dark" withIcon>
					<ChevronIcon width="24px" height="24px" />
					Назад
				</AppButton>
				<AppButton onClick={onDelete} size="lg" variant="danger" withIcon>
					<TrashIcon width="24px" height="24px" />
					<span>Удалить</span>
				</AppButton>
			</div>
		</>
	);
};

export default UserInfoPage;
