import React, {useEffect, useState} from "react";
import Head from "next/head";
import {AppDivider, AppPagination, AppSetOfReportsFilter, AppTable} from "../../../components/Main";
import {useAppDispatch} from "../../../core/hooks";
import {getSetOfReportsThunks} from "../../../core/store/setOfReports/setOfReports.thunks";
import {ISetOfReportsVisitsOfForeignSpecialists, ISetOfReportsParams} from "../../../core/models";
import moment from "moment/moment";
import Moment from "react-moment";

const VisitsOfForeignSpecialistsSetOfReportsPage = () => {
	const dispatch = useAppDispatch();

	const [results, setResults] = useState<{count: number; data: ISetOfReportsVisitsOfForeignSpecialists[]}>();
	const [filters, setFilters] = useState<ISetOfReportsParams>({
		take: 20,
		skip: 0,
		start: moment().subtract(1, "months").startOf("month").format("yyyy-MM-DD"),
		end: moment().endOf("month").format("yyyy-MM-DD"),
		organizations: [],
	});

	useEffect(() => {
		const promise = dispatch(
			getSetOfReportsThunks({
				url: "visitsOfForeignSpecialists",
				params: filters,
			}),
		);

		promise.then((action) =>
			setResults((prev) => {
				const result = action.payload as typeof results;
				if (result) {
					return {count: result.count, data: result.data};
				}
				return prev;
			}),
		);

		return () => {
			promise.abort();
		};
	}, [filters]);

	const onFilterSubmit = (params: ISetOfReportsParams) => {
		setFilters((prev) => ({...prev, ...params}));
	};

	const onPagination = (pagination: {take: number; skip: number}) => {
		setFilters((prev) => ({...prev, ...pagination}));
	};

	const renderRow = () => {
		return results?.data.map((r) => (
			<tr key={r.id}>
				<td>{r.id}</td>
				<td>{r.displayName}</td>
				<td>{r.speciality.title.ru}</td>
				<td>{r.country.title.ru}</td>
				<td>{r.organization}</td>
				<td>{<Moment format="DD.MM.YYYY">{r.startDate}</Moment>}</td>
				<td>{<Moment format="DD.MM.YYYY">{r.endDate}</Moment>}</td>
			</tr>
		));
	};

	return (
		<div className="pe-0 flex-col h-100">
			<Head>
				<title>Обращение физических и юридических лиц</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<h1 className="h1 text-center">Обращение физических и юридических лиц</h1>

			<AppDivider className="my-1.25" />

			<div className="pe-2.5">
				<AppSetOfReportsFilter exportUrl="visitsOfForeignSpecialists" onFilterSubmit={onFilterSubmit} />
			</div>

			{(results?.data?.length || -1) > 0 ? (
				<AppTable wrapperClassName="mb-1.5">
					<AppTable.THead extended>
						<tr>
							<th>№</th>
							<th>Ф.И.О. пребывающего специалиста</th>
							<th>Специальность</th>
							<th>Страна пребывания</th>
							<th>Место основной работы (учреждение)</th>
							<th>Срок пребывания до:</th>
							<th>Срок пребывания от:</th>
						</tr>
					</AppTable.THead>
					<AppTable.TBody>{renderRow()}</AppTable.TBody>
				</AppTable>
			) : (
				"Список отчётов пуст."
			)}
			<div className="mt-auto pe-2.5">
				<AppDivider className="my-1.25" />
				<AppPagination totalCount={results?.count} cb={onPagination} />
			</div>
		</div>
	);
};

export default VisitsOfForeignSpecialistsSetOfReportsPage;
