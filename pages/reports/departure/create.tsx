import React from "react";
import Head from "next/head";
import cn from "classnames";
import {AppButton, AppCard, AppDivider, AppInput} from "../../../components/Main";
import styles from "../../../styles/reports.module.scss";
import SuccessIcon from "../../../assets/images/icons/filled/checked.svg";
import ChevronIcon from "../../../assets/images/icons/filled/arrows/chevron-left.svg";
import {useRouter} from "next/router";
import {useAppDispatch} from "../../../core/hooks";
import {useForm} from "react-hook-form";
import {ePlace, IReportDepartureCreateParams} from "../../../core/models";
import {createDepartureReportThunk} from "../../../core/store/report/departure/departure-report.thunks";
import {ReactSelect} from "../../../components/External";
import {countryOptions} from "../../../core/utils/countries";

const fieldOptions = {
	required: true,
	valueAsNumber: true,
};

const DepartureReportCreatePage = () => {
	const router = useRouter();

	const dispatch = useAppDispatch();

	const {register, handleSubmit, setValue} = useForm<IReportDepartureCreateParams>();

	const onSubmit = async (fields: IReportDepartureCreateParams) => {
		const action = await dispatch(createDepartureReportThunk(fields));
		const id = action.payload as number;

		if (id) {
			void router.push(`/reports/departure/${id}`);
		}
	};

	const onSelect = () => (option: Record<string, unknown>) => {
		setValue("place", option.value as Exclude<ePlace, ePlace.Intenational | ePlace.Other>);
	};
	return (
		<>
			<Head>
				<title>Проделанная работа в регионах (ОЦ)</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<h1 className="h1 text-center">Проделанная работа в регионах (ОЦ)</h1>

			<AppDivider className="my-1.25" />

			{/*TODO: make a filter component*/}
			<div className={styles.filters}>
				<label className={styles.filterLabel}>
					<span className="text-main-bold">Дата</span>
					<AppInput type="date" />
				</label>

				<label className={styles.filterLabel}>
					<span className="text-main-bold">Номер:</span>
					<AppButton variant="main" size="square">
						80
					</AppButton>
				</label>
			</div>

			<div className={cn(styles.cardDesk, styles.cardDeskGrid2)}>
				<div className={styles.cardWrapper}>
					<AppCard className="h-100">
						<AppCard.Body className={cn("gap-0.5", styles.cardRows)}>
							<label className={cn("flex-justify-between gap-1", styles.cardRow)}>
								<span className={cn("rounded text-main-bold flex-fill", styles.cardRowLabel)}>
									Область, куда был осуществлён выезд
								</span>
								<ReactSelect
									className="text-center"
									onChange={onSelect}
									options={countryOptions.filter((c) => ![ePlace.Other, ePlace.Intenational].includes(c.value))}
								/>
							</label>

							<label className={cn("flex-justify-between gap-1", styles.cardRow)}>
								<span className={cn("rounded text-main-bold flex-fill", styles.cardRowLabel)}>
									Кол-во выездов в регионы
								</span>
								<AppInput className="text-center" type="number" placeholder="0" {...register("departures")} />
							</label>

							<label className={cn("flex-justify-between gap-1", styles.cardRow)}>
								<span className={cn("rounded text-main-bold flex-fill", styles.cardRowLabel)}>
									Кол-во специалистов посетивших регионы
								</span>
								<AppInput className="text-center" type="number" placeholder="0" {...register("specialists")} />
							</label>

							<label className={cn("flex-justify-between gap-1", styles.cardRow)}>
								<span className={cn("rounded text-main-bold flex-fill", styles.cardRowLabel)}>
									Кол-во мастер-классов проведенных в регионе
								</span>
								<AppInput className="text-center" type="number" placeholder="0" {...register("manipulations")} />
							</label>

							<label className={cn("flex-justify-between gap-1", styles.cardRow)}>
								<span className={cn("rounded text-main-bold flex-fill", styles.cardRowLabel)}>
									Кол-во семинаров проведенных в регионе
								</span>
								<AppInput className="text-center" type="number" placeholder="0" {...register("seminars")} />
							</label>

							<label className={cn("flex-justify-between gap-1", styles.cardRow)}>
								<span className={cn("rounded text-main-bold flex-fill", styles.cardRowLabel)}>
									Кол-во специалистов получившие квалификацию на местах
								</span>
								<AppInput className="text-center" type="number" placeholder="0" {...register("educatedSpecialists")} />
							</label>
						</AppCard.Body>
					</AppCard>
				</div>

				<div className={styles.cardWrapper}>
					<AppCard className="h-100">
						<AppCard.Body className={cn("gap-0.5", styles.cardRows)}>
							<label className={cn("flex-justify-between gap-1", styles.cardRow)}>
								<span className={cn("rounded text-main-bold flex-fill", styles.cardRowLabel)}>
									Кол-во населения прошедших медосмотр
								</span>
								<AppInput className="text-center" type="number" placeholder="0" {...register("medicalCheckup")} />
							</label>

							<label className={cn("flex-justify-between gap-1", styles.cardRow)}>
								<span className={cn("rounded text-main-bold flex-fill", styles.cardRowLabel)}>
									В том числе, дети до 18 лет
								</span>
								<AppInput className="text-center" type="number" placeholder="0" {...register("minor")} />
							</label>

							<label className={cn("flex-justify-between gap-1", styles.cardRow)}>
								<span className={cn("rounded text-main-bold flex-fill", styles.cardRowLabel)}>
									Кол-во выявленных пациетов
								</span>
								<AppInput className="text-center" type="number" placeholder="0" {...register("identifiedPatients")} />
							</label>

							<label className={cn("flex-justify-between gap-1", styles.cardRow)}>
								<span className={cn("rounded text-main-bold flex-fill", styles.cardRowLabel)}>
									В том числе, кол-во пациентов для амбулаторного лечения
								</span>
								<AppInput className="text-center" type="number" placeholder="0" {...register("outPatient")} />
							</label>

							<label className={cn("flex-justify-between gap-1", styles.cardRow)}>
								<span className={cn("rounded text-main-bold flex-fill", styles.cardRowLabel)}>
									В том числе, кол-во пациентов для стационарного лечения
								</span>
								<AppInput className="text-center" type="number" placeholder="0" {...register("inPatient")} />
							</label>
						</AppCard.Body>
					</AppCard>
				</div>
			</div>

			<div className={cn(styles.cardDesk, styles.cardDeskGrid2)}>
				<div className={styles.cardWrapper}>
					<AppCard className="h-100">
						<AppCard.Body className={cn("gap-0.5", styles.cardRows)}>
							<label className={cn("flex-justify-between gap-1", styles.cardRow)}>
								<span className={cn("rounded text-main-bold flex-fill", styles.cardRowLabel)}>
									Кол-во операций проведенных в регионе
								</span>
								<AppInput className="text-center" type="number" placeholder="0" {...register("operations")} />
							</label>

							<label className={cn("flex-justify-between gap-1", styles.cardRow)}>
								<span className={cn("rounded text-main-bold flex-fill", styles.cardRowLabel)}>
									В том числе, кол-во высокотехнологичных операций
								</span>
								<AppInput className="text-center" type="number" placeholder="0" {...register("manipulations")} />
							</label>
						</AppCard.Body>
					</AppCard>
				</div>

				<div className={styles.cardWrapper}>
					<AppCard className="h-100">
						<AppCard.Body className={cn("gap-0.5", styles.cardRows)}>
							<label className={cn("flex-justify-between gap-1", styles.cardRow)}>
								<span className={cn("rounded text-main-bold flex-fill", styles.cardRowLabel)}>
									Кол-во новых внедрений по диагностике в регионе
								</span>
								<AppInput
									className="text-center"
									type="number"
									placeholder="0"
									{...register("diagnosticMethodsRegion")}
								/>
							</label>

							<label className={cn("flex-justify-between gap-1", styles.cardRow)}>
								<span className={cn("rounded text-main-bold flex-fill", styles.cardRowLabel)}>
									Кол-во новых внедрений по лечению в регионе
								</span>
								<AppInput
									className="text-center"
									type="number"
									placeholder="0"
									{...register("diagnosticMethodsDistrict")}
								/>
							</label>
						</AppCard.Body>
					</AppCard>
				</div>
			</div>

			<div className="flex-justify-between mt-auto pt-2.5">
				<AppButton useAs="link" href="/reports/departure" size="lg" variant="dark" withIcon>
					<ChevronIcon width="24px" height="24px" />
					Назад
				</AppButton>
				<AppButton onClick={handleSubmit(onSubmit)} size="lg" variant="success" withIcon>
					<SuccessIcon width="24px" height="24px" />
					<span>Отправить отчёт</span>
				</AppButton>
			</div>
		</>
	);
};
export default DepartureReportCreatePage;
