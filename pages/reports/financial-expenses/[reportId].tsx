import React, {useEffect} from "react";
import Head from "next/head";
import {AppButton, AppCard, AppDivider, AppTable} from "../../../components/Main";
import ChevronIcon from "../../../assets/images/icons/filled/arrows/chevron-left.svg";
import {useRouter} from "next/router";
import {useAppDispatch, useAppSelector} from "../../../core/hooks";
import {getFinancialExpensesReportByIdThunk} from "../../../core/store/report/financialExpenses/financial-expenses-report.thunks";
import {setFinancialExpenseReportByIdAction} from "../../../core/store/report/financialExpenses/financial-expenses-report.slices";
import {eReportStatusType, eTable} from "../../../core/models";
import {ReportPageUpdate} from "../../../components/Layout";

const CenterFinancialExpensesListInfoPage = () => {
	const router = useRouter();
	const reportId = router.query["reportId"] as string;

	const dispatch = useAppDispatch();
	const report = useAppSelector(({financialExpensesReport}) => financialExpensesReport.current);

	useEffect(() => {
		if (reportId) {
			const id = +reportId;

			if (!isNaN(id)) {
				const promises = [dispatch(getFinancialExpensesReportByIdThunk(id))];

				return () => {
					promises.forEach((p) => p.abort());
					dispatch(setFinancialExpenseReportByIdAction(null));
				};
			}
		}
	}, [reportId]);

	if (!report) return null;

	return (
		<>
			<Head>
				<title>{report.organization.title.ru}</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<h1 className="h1 text-center">{report.organization.title.ru}</h1>

			<AppDivider className="my-1.25" />

			<div className="flex-col gap-2.5">
				<AppCard shadow="table">
					<AppTable wrapperClassName="p-0">
						<AppTable.THead extended>
							<tr>
								<th>Kомандировки (бюджет, внебюджет)</th>
								<th>Зарплата и премии (внебюджет)</th>
								<th>Капитальный и частичный ремонт</th>
								<th>Спонсорство</th>
								<th>Наука (гранд, инноватция и тд)</th>
								<th>Коммунальные расходы</th>
							</tr>
						</AppTable.THead>
						<AppTable.TBody>
							<tr>
								<td>{report.businessTrips}</td>
								<td>{report.salaries}</td>
								<td>{report.repairs}</td>
								<td>{report.sponsorships}</td>
								<td>{report.innovations}</td>
								<td>{report.communalPayments}</td>
							</tr>
						</AppTable.TBody>
					</AppTable>
				</AppCard>

				<AppCard shadow="table">
					<AppTable wrapperClassName="p-0">
						<AppTable.THead extended>
							<tr>
								<th>Социальные расходы</th>
								<th>Аутсорс</th>
								<th>Учеба и повышение квалификации</th>
								<th>На лекарства и расходные материалы</th>
								<th>Медицинский инвентарь</th>
								<th>Итого</th>
							</tr>
						</AppTable.THead>
						<AppTable.TBody>
							<tr>
								<td>{report.socialPayments}</td>
								<td>{report.outsource}</td>
								<td>{report.education}</td>
								<td>{report.materials}</td>
								<td>{report.inventory}</td>
								<td>{report.otherExpenses}</td>
							</tr>
						</AppTable.TBody>
					</AppTable>
				</AppCard>
			</div>

			{/*TODO: add padding-top to avoid adhesion in small heights of screen*/}
			<div className="flex-justify-between mt-auto">
				<AppButton useAs="link" href="/financial-expenses/daily" size="lg" variant="dark" withIcon>
					<ChevronIcon width="24px" height="24px" />
					Назад
				</AppButton>

				{report.status.id === eReportStatusType.Sent && (
					<ReportPageUpdate reportId={+reportId} table={eTable.FinancialExpensesReport} />
				)}
			</div>
		</>
	);
};

export default CenterFinancialExpensesListInfoPage;
