import React, {useEffect} from "react";
import Head from "next/head";
import {AppButton, AppCard, AppDivider, AppTable} from "../../../components/Main";
import ChevronIcon from "../../../assets/images/icons/filled/arrows/chevron-left.svg";
import styles from "../../../styles/reports.module.scss";
import {useRouter} from "next/router";
import {useAppDispatch, useAppSelector} from "../../../core/hooks";
import {getScienceReportByIdThunk} from "../../../core/store/report/science/science.thunks";
import {setScienceReportByIdAction} from "../../../core/store/report/science/science.slices";
import Moment from "react-moment";
import {eTable} from "../../../core/models";
import {ReportPageUpdate} from "../../../components/Layout";
import {scienceWorkType} from "../../../core/models/appendix/scienceTypes";
import {FileService} from "../../../core/services";

const ScienceReportInfoPage = () => {
	const router = useRouter();
	const reportId = router.query["reportId"] as string;

	const dispatch = useAppDispatch();
	const report = useAppSelector(({scienceReport}) => scienceReport.current);

	useEffect(() => {
		if (reportId) {
			const id = +reportId;

			if (!isNaN(id)) {
				const promises = [dispatch(getScienceReportByIdThunk(id))];

				return () => {
					promises.forEach((p) => p.abort());
					dispatch(setScienceReportByIdAction(null));
				};
			}
		}
	}, [reportId]);

	if (!report) return null;

	const downloadFile =
		(url: string, name = "file") =>
		() => {
			FileService.download(url, name);
		};

	const renderTables = () => {
		let lastJoinedPartId: number;
		return [...report.scienceParts]
			.sort((a, b) => a.type.localeCompare(b.type))
			.map((part, i, sortedArr) => {
				const nextPart = sortedArr[i + 1];

				const isSameType = part.type === nextPart?.type;

				if (isSameType) {
					lastJoinedPartId = nextPart.id;
				}

				if (part.id !== lastJoinedPartId) {
					return (
						<AppCard shadow="table" key={part.id}>
							<AppTable wrapperClassName="p-0">
								<AppTable.THead extended>
									<tr>
										<th colSpan={5}>{scienceWorkType[part.type]}</th>
									</tr>
									<tr>
										<th rowSpan={2}>Название проекта</th>
										<th colSpan={2}>Срок проекта</th>
										<th rowSpan={2}>Сумма проекта (сум)</th>
										<th rowSpan={2}>Поддерживающий документ</th>
									</tr>
									<tr>
										<th>Начало проекта</th>
										<th>Конец проекта</th>
									</tr>
								</AppTable.THead>
								<AppTable.TBody>
									<tr>
										<td>{part.title}</td>
										<td>{part.amount}</td>
										<td>
											<Moment format="DD.MM.YYYY">{part.startDate}</Moment>
										</td>
										<td>
											<Moment format="DD.MM.YYYY">{part.endDate}</Moment>
										</td>
										<td>
											<AppButton
												variant="print"
												size="lg"
												onClick={downloadFile(part.file.url, part.file.name)}
												className="text-center w-100"
												type="button"
											>
												{part.file.name}
											</AppButton>
										</td>
									</tr>

									{isSameType && (
										<tr>
											<td>{nextPart.title}</td>
											<td>{nextPart.amount}</td>
											<td>
												<Moment format="DD.MM.YYYY">{nextPart.startDate}</Moment>
											</td>
											<td>
												<Moment format="DD.MM.YYYY">{nextPart.endDate}</Moment>
											</td>
											<td>
												<AppButton
													variant="print"
													size="lg"
													onClick={downloadFile(nextPart.file.url, nextPart.file.name)}
													className="text-center w-100"
													type="button"
												>
													{part.file.name}
												</AppButton>
											</td>
										</tr>
									)}
								</AppTable.TBody>
							</AppTable>
						</AppCard>
					);
				}
			});
	};

	return (
		<>
			<Head>
				<title>{report.organization.title.ru}</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<h1 className="h1 text-center">{report.organization.title.ru}</h1>

			<AppDivider className="my-1.25" />

			{/*TODO: change font size of table*/}
			<div className="flex-col gap-2.5">{renderTables()}</div>
			{/*TODO: add padding-top to avoid adhesion in small heights of screen*/}
			<div className="flex-justify-between mt-auto pt-2.5">
				<AppButton useAs="link" href="/reports/science" size="lg" variant="dark" withIcon>
					<ChevronIcon width="24px" height="24px" />
					Назад
				</AppButton>

				<ReportPageUpdate
					reportStatusId={report.status.id}
					paternalId={report.organization.paternalId}
					reportId={+reportId}
					table={eTable.ScienceReport}
				/>
			</div>
		</>
	);
};

export default ScienceReportInfoPage;
